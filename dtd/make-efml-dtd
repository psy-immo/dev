#!/usr/bin/python 

dtd = open("efml.0.0.1.0.dtd","w")

html_elements = "i|b|br|p|div|span"
efml_elements = "tags|tie|runway|answer|sniffy|instructions|dropdown|"+\
				"phpurl|jsurl|documentid|studyid|subjectprompt|"+\
				"subjectinfo|subjectchange|airport|template|freetext|"+\
				"checkbox|radiobutton|multiline|popuphelp|"+\
				"trashcan|boxspace|efmlboard|efmlpreview"
efml_extra = "tables"
nested_elements = "plain|dropdown|freetext|checkbox|radiobutton|multiline"
editor_contents = "efmlquote"

efml_root_elements = "(#PCDATA|title|"+efml_elements+"|"+efml_extra+"|"+html_elements+")*"

universal_attributes = r"""
	tags	CDATA	#IMPLIED
	atags	CDATA	#IMPLIED
	rtags	CDATA	#IMPLIED
"""

html_attributes = r"""
	style	CDATA	#IMPLIED
""" + universal_attributes

dtd.write("\n<!ELEMENT efml "+efml_root_elements+" >\n")

dtd.write("\n<!ELEMENT br EMPTY >\n")

dtd.write("\n<!ELEMENT i (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT b (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT p (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT div (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT span (#PCDATA|"+html_elements+")* >\n")
 
dtd.write("\n<!ATTLIST i "+html_attributes+" >\n")
dtd.write("\n<!ATTLIST b "+html_attributes+" >\n")
dtd.write("\n<!ATTLIST p "+html_attributes+" >\n")
dtd.write("\n<!ATTLIST div "+html_attributes+" >\n")
dtd.write("\n<!ATTLIST span "+html_attributes+" >\n")
 
dtd.write("\n<!ELEMENT tags (#PCDATA|"+efml_elements+"|"+efml_extra+"|"+html_elements+")* >\n")

dtd.write("\n<!ATTLIST tags "+universal_attributes+" >\n")

dtd.write("\n<!ELEMENT tables (#PCDATA|r|c|"+efml_elements+"|"+html_elements+")* >\n")

dtd.write("\n<!ATTLIST tables "+universal_attributes+"""
	height	CDATA	#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT r EMPTY >\n")
dtd.write("\n<!ELEMENT c EMPTY >\n")

dtd.write("\n<!ELEMENT tie (#PCDATA|"+html_elements+"|"+efml_elements+")* >\n")

dtd.write("\n<!ATTLIST tie "+universal_attributes+" >\n")

dtd.write("\n<!ELEMENT runway (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST runway "+universal_attributes+"""
	name	CDATA			#IMPLIED
	content	(respawn|refilling)	#IMPLIED
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT answer (#PCDATA|hint|correct|check)* >\n")
dtd.write("\n<!ATTLIST answer "+universal_attributes+" >\n")

dtd.write("\n<!ELEMENT hint (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ATTLIST hint "+"""
	lack	CDATA			#IMPLIED
 >
""")
# lack is used for feedback given in context of inference

dtd.write("\n<!ELEMENT correct (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT check (#PCDATA)* >\n")


dtd.write("\n<!ELEMENT sniffy (#PCDATA|unused|label)* >\n")
dtd.write("\n<!ATTLIST sniffy "+universal_attributes+" >\n")

dtd.write("\n<!ELEMENT unused (#PCDATA)* >\n")
dtd.write("\n<!ELEMENT label (#PCDATA)* >\n")

dtd.write("\n<!ELEMENT popuphelp (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST popuphelp "+universal_attributes+"""
	name	CDATA			#IMPLIED
	text	CDATA			#IMPLIED
	style	CDATA			#IMPLIED	
 >
""")


dtd.write("\n<!ELEMENT instructions (#PCDATA|unread|label)* >\n")
dtd.write("\n<!ATTLIST instructions "+universal_attributes+" >\n")

dtd.write("\n<!ELEMENT unread (#PCDATA)* >\n")

dtd.write("\n<!ELEMENT dropdown (#PCDATA|option)* >\n")
dtd.write("\n<!ATTLIST dropdown "+universal_attributes+"""
	name	CDATA			#IMPLIED
	value	CDATA			#IMPLIED
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT radiobutton (#PCDATA|option)* >\n")
dtd.write("\n<!ATTLIST radiobutton "+universal_attributes+"""
	name	CDATA			#IMPLIED
	value	CDATA			#IMPLIED
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
	type	(form|tr)		#IMPLIED
 >
""")


dtd.write("\n<!ELEMENT checkbox (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST checkbox "+universal_attributes+"""
	name	CDATA			#IMPLIED
	checked	CDATA			#IMPLIED
	unchecked	CDATA			#IMPLIED	
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT freetext (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST freetext "+universal_attributes+"""
	name	CDATA			#IMPLIED
	value	CDATA			#IMPLIED
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT multiline (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST multiline "+universal_attributes+"""
	name	CDATA			#IMPLIED
	value	CDATA			#IMPLIED
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
 >
""")


dtd.write("\n<!ELEMENT option (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST option "+"""
	value	CDATA			#IMPLIED
 >
""")

for tag in ["phpurl","jsurl","documentid","studyid","subjectprompt","subjectinfo","subjectchange","plain"]:
	dtd.write("\n<!ELEMENT "+tag+" (#PCDATA)* >\n")
	#dtd.write("\n<!ATTLIST "+tag+" "+universal_attributes+" >\n")

dtd.write("\n<!ELEMENT template ("+nested_elements+")* >\n")
dtd.write("\n<!ATTLIST template "+universal_attributes+"""
	name		CDATA				#IMPLIED
	nonempty	(allow|disallow)	#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT airport (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST airport "+universal_attributes+"""
	name	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
	color	CDATA			#IMPLIED
	filled	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT efmlboard (#PCDATA|"+editor_contents+")* >\n")
dtd.write("\n<!ATTLIST efmlboard "+universal_attributes+"""
	name	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT efmlquote "+efml_root_elements+">\n")
dtd.write("\n<!ATTLIST efmlquote "+universal_attributes+"""
 >
""")

dtd.write("\n<!ELEMENT efmlpreview (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST efmlpreview "+universal_attributes+"""
 >
""")

dtd.write("\n<!ELEMENT trashcan EMPTY >\n")
dtd.write("\n<!ATTLIST trashcan "+universal_attributes+"""
	name	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
	color	CDATA			#IMPLIED	
	filled	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT boxspace (floatbox|arrow) >\n")
dtd.write("\n<!ATTLIST boxspace "+universal_attributes+"""
	name	CDATA			#IMPLIED
	width	CDATA			#IMPLIED
	height	CDATA			#IMPLIED
	color	CDATA			#IMPLIED	
	filled	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT floatbox (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST floatbox "+"""
	style	CDATA			#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT arrow EMPTY >\n")
dtd.write("\n<!ATTLIST arrow "+"""
	source	CDATA			#REQUIRED
	target	CDATA			#REQUIRED	
 >
""")

dtd.write("\n<!ELEMENT feedback (#PCDATA|hint|correct|required|needjustification|incomplete|incorrect)* >\n")
dtd.write("\n<!ELEMENT required (#PCDATA)* >\n")
dtd.write("\n<!ATTLIST required "+"""
	count	CDATA			#IMPLIED
	name	CDATA			#IMPLIED
 >
""")
dtd.write("\n<!ELEMENT needjustification (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT incomplete (#PCDATA|"+html_elements+")* >\n")
dtd.write("\n<!ELEMENT incorrect (#PCDATA|"+html_elements+")* >\n")

#add embedded inference xml node

__name__ = "efml"
rootname = "inference"
furtherchilds = "|feedback"
execfile("make-inference-dtd")
dtd.write("\n<!ATTLIST "+ rootname + " "+universal_attributes+"""
	name	CDATA			#IMPLIED
	pointstag	CDATA		#IMPLIED
	conclusionstag	CDATA		#IMPLIED
 >
""")

