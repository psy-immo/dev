#!/usr/bin/python 

import sys



if __name__ == '__main__':
	dtd = open("inference.0.0.1.0.dtd","w")
	rootname = "root"

	
	
dtd.write("\n<!ELEMENT " + rootname +" (parse|assert|expert|conclusion|implicit|"+\
	"justified|trivial|invalid|rule|conclusions|quality) >\n")

dtd.write("\n<!ELEMENT parse (subject|predicate|object)* >\n")

dtd.write("\n<!ELEMENT subject (#PCDATA|rho)* >\n")

dtd.write("\n<!ATTLIST subject "+"""
		id	CDATA				#IMPLIED
		source	(subject|predicate|object)	#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT object (#PCDATA|rho)* >\n")

dtd.write("\n<!ATTLIST object "+"""
		id	CDATA				#IMPLIED
		source	(subject|predicate|object)	#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT predicate (#PCDATA|rho)* >\n")

dtd.write("\n<!ATTLIST predicate "+"""
		id	CDATA				#IMPLIED
		source	(subject|predicate|object)	#IMPLIED
 >
""")

for tag in ["assert","expert","implicit","conclusion"]:
	dtd.write("\n<!ELEMENT "+tag+" (#PCDATA)* >\n")


dtd.write("\n<!ELEMENT rule (premise|constraint|infer)* >\n")
dtd.write("\n<!ATTLIST rule "+"""
		name	CDATA	#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT premise (subject|predicate|object)* >\n")

dtd.write("\n<!ATTLIST premise "+"""
		id	CDATA	#IMPLIED
 >
""")

dtd.write("\n<!ELEMENT constraint (subject|predicate|object)* >\n")
dtd.write("\n<!ELEMENT infer (subject|predicate|object)* >\n")

dtd.write("\n<!ELEMENT rho (in|out)* >\n")


dtd.write("\n<!ELEMENT in (#PCDATA)* >\n")
dtd.write("\n<!ELEMENT out (#PCDATA)* >\n")

dtd.write("\n<!ATTLIST in "+"""
		id	CDATA	#IMPLIED
 >
""")

dtd.write("\n<!ATTLIST out "+"""
		id	CDATA	#IMPLIED
 >
""")

for tag in ["justified","trivial","invalid","quality","conclusions"]:
	dtd.write("\n<!ELEMENT "+tag+" (subject|predicate|object|constraint)* >\n")
	
dtd.write("\n<!ATTLIST quality "+"""
        name   CDATA  #IMPLIED
 >
""")


